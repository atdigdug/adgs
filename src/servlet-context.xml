<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- This statement is needed for swagger-ui to work. I would love an explanation why. -->
	<annotation-driven content-negotiation-manager="contentNegotiationManager" />

	<beans:bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="false" />
		<beans:property name="favorParameter" value="true" />
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/img/**" location="/img/" />
	<resources mapping="/js/**" location="/js/" />

	<context:annotation-config />
	<beans:bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
		<beans:property name="resources" value="classpath:application.yaml" />
	</beans:bean>
	<context:property-placeholder properties-ref="yamlProperties" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="10000000" />

	</beans:bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>


    <!-- dataSource configuration -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url" value="#{ 'jdbc:mysql://' + (systemProperties['RDS_ENDPOINT'] == null ? 'localhost' : systemProperties['RDS_ENDPOINT']) + ':3306/giftsub' }" />
        <beans:property name="username" value="giftsub" />
        <beans:property name="password" value="GiftSub2018" />
    </beans:bean>

	<!-- jdbcTemplate uses dataSource -->
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>		

	<task:scheduler id="taskScheduler" pool-size="1" />
	<task:executor id="taskExecutor" pool-size="1"
		queue-capacity="5" />
	<task:annotation-driven executor="taskExecutor"
		scheduler="taskScheduler" />

	<!-- context:component-scan base-package="com.mavin.egifting,com.mavin.egifting.utils,com.mavin.egifting.service, com.mavin.egifting.config" -->
	<context:component-scan base-package="biz.giftsub,biz.giftsub.services" />

</beans:beans>